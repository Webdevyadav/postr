{"version":3,"file":"static/js/903.22cca811.chunk.js","mappings":"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","sources":["pages/Messages.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { FaSearch, FaEllipsisH, FaPaperPlane, FaSmile, FaPaperclip, FaCircle, FaComments } from 'react-icons/fa';\n\nconst Messages = () => {\n  const [selectedChat, setSelectedChat] = useState(0);\n  const [message, setMessage] = useState('');\n\n  const chats = [\n    {\n      id: 1,\n      name: 'Alex Morgan',\n      image: 'https://randomuser.me/api/portraits/women/44.jpg',\n      lastMessage: 'Thanks for connecting! Would love to discuss the project further.',\n      time: '2:30 PM',\n      unread: 2,\n      status: 'online'\n    },\n    {\n      id: 2,\n      name: 'David Chen',\n      image: 'https://randomuser.me/api/portraits/men/32.jpg',\n      lastMessage: 'What do you think about the new design?',\n      time: 'Yesterday',\n      unread: 0,\n      status: 'offline'\n    },\n    {\n      id: 3,\n      name: 'Sarah Johnson',\n      image: 'https://randomuser.me/api/portraits/women/68.jpg',\n      lastMessage: 'Let me know when you are available for a call.',\n      time: 'Monday',\n      unread: 1,\n      status: 'online'\n    },\n    {\n      id: 4,\n      name: 'Michael Brown',\n      image: 'https://randomuser.me/api/portraits/men/75.jpg',\n      lastMessage: 'I have shared the document with you. Lets discuss tomorrow.',\n      time: 'Last week',\n      unread: 0,\n      status: 'offline'\n    }\n  ];\n\n  const conversations = [\n    {\n      id: 1,\n      messages: [\n        {\n          id: 1,\n          sender: 'Alex Morgan',\n          text: 'Hi there! I saw your profile and I think your experience would be a great fit for a project I am working on.',\n          time: '10:30 AM',\n          isSender: false\n        },\n        {\n          id: 2,\n          sender: 'You',\n          text: 'Hey Alex! Thanks for reaching out. I would love to hear more about the project.',\n          time: '10:45 AM',\n          isSender: true\n        },\n        {\n          id: 3,\n          sender: 'Alex Morgan',\n          text: 'Great! It is a web application for a fintech startup. We need someone with your React skills to help us build the dashboard.',\n          time: '11:00 AM',\n          isSender: false\n        },\n        {\n          id: 4,\n          sender: 'You',\n          text: 'That sounds interesting! Do you have any documentation or wireframes I could look at?',\n          time: '11:15 AM',\n          isSender: true\n        },\n        {\n          id: 5,\n          sender: 'Alex Morgan',\n          text: 'Yes, I will share the project brief and wireframes with you. Would you be available for a call tomorrow to discuss the details?',\n          time: '11:30 AM',\n          isSender: false\n        },\n        {\n          id: 6,\n          sender: 'You',\n          text: 'Definitely! I am free tomorrow afternoon. How does 2 PM sound?',\n          time: '11:45 AM',\n          isSender: true\n        },\n        {\n          id: 7,\n          sender: 'Alex Morgan',\n          text: 'Perfect! I will send you a calendar invite. Thanks for connecting! I would love to discuss the project further.',\n          time: '2:30 PM',\n          isSender: false\n        }\n      ]\n    },\n    {\n      id: 2,\n      messages: [\n        {\n          id: 1,\n          sender: 'David Chen',\n          text: 'Hey, have you had a chance to look at the design mockups I sent?',\n          time: 'Yesterday',\n          isSender: false\n        },\n        {\n          id: 2,\n          sender: 'You',\n          text: 'Yes, I reviewed them this morning. The UI looks clean and intuitive.',\n          time: 'Yesterday',\n          isSender: true\n        },\n        {\n          id: 3,\n          sender: 'David Chen',\n          text: 'Thanks! I was thinking of making some changes to the navigation. What do you think about the new design?',\n          time: 'Yesterday',\n          isSender: false\n        }\n      ]\n    },\n    {\n      id: 3,\n      messages: [\n        {\n          id: 1,\n          sender: 'Sarah Johnson',\n          text: 'Hi there! I am organizing a panel discussion on women in tech next month and would love to have you as a speaker.',\n          time: 'Monday',\n          isSender: false\n        },\n        {\n          id: 2,\n          sender: 'You',\n          text: 'That sounds amazing! I would be honored to participate.',\n          time: 'Monday',\n          isSender: true\n        },\n        {\n          id: 3,\n          sender: 'Sarah Johnson',\n          text: 'Great! Let me know when you are available for a call to discuss the details.',\n          time: 'Monday',\n          isSender: false\n        }\n      ]\n    },\n    {\n      id: 4,\n      messages: [\n        {\n          id: 1,\n          sender: 'Michael Brown',\n          text: 'Hi, I have been looking at your portfolio and I am impressed with your data visualization work.',\n          time: 'Last week',\n          isSender: false\n        },\n        {\n          id: 2,\n          sender: 'You',\n          text: 'Thank you, Michael! That is one of my favorite areas to work in.',\n          time: 'Last week',\n          isSender: true\n        },\n        {\n          id: 3,\n          sender: 'Michael Brown',\n            text: 'Would you be interested in collaborating on a project? I have shared the document with you. Let us discuss tomorrow.',\n          time: 'Last week',\n          isSender: false\n        }\n      ]\n    }\n  ];\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (message.trim()) {\n      // In a real app, this would send the message to the server\n      console.log('Sending message:', message);\n      setMessage('');\n    }\n  };\n\n  return (\n    <PageContainer\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n    >\n      <BackgroundGlow />\n      <PageContent>\n        <MessagesHeader>\n          <Title>Messages</Title>\n        </MessagesHeader>\n\n        <MessagesLayout>\n          <ChatsList>\n            <SearchContainer>\n              <SearchIcon>\n                <FaSearch />\n              </SearchIcon>\n              <SearchInput type=\"text\" placeholder=\"Search messages...\" />\n            </SearchContainer>\n\n            {chats.map((chat, index) => (\n              <ChatItem \n                key={chat.id} \n                selected={selectedChat === index}\n                onClick={() => setSelectedChat(index)}\n              >\n                <ChatAvatar>\n                  <img src={chat.image} alt={chat.name} />\n                  {chat.status === 'online' && <StatusIndicator />}\n                </ChatAvatar>\n                <ChatInfo>\n                  <ChatName>{chat.name}</ChatName>\n                  <ChatLastMessage>{chat.lastMessage}</ChatLastMessage>\n                </ChatInfo>\n                <ChatMeta>\n                  <ChatTime>{chat.time}</ChatTime>\n                  {chat.unread > 0 && <UnreadBadge>{chat.unread}</UnreadBadge>}\n                </ChatMeta>\n              </ChatItem>\n            ))}\n          </ChatsList>\n\n          <ChatContainer>\n            {selectedChat !== null ? (\n              <>\n                <ChatHeader>\n                  <ChatHeaderUser>\n                    <img src={chats[selectedChat].image} alt={chats[selectedChat].name} />\n                    <div>\n                      <ChatHeaderName>{chats[selectedChat].name}</ChatHeaderName>\n                      <ChatHeaderStatus>\n                        {chats[selectedChat].status === 'online' ? (\n                          <>\n                            <StatusDot />\n                            <span>Online</span>\n                          </>\n                        ) : (\n                          'Offline'\n                        )}\n                      </ChatHeaderStatus>\n                    </div>\n                  </ChatHeaderUser>\n                  <ChatOptions>\n                    <FaEllipsisH />\n                  </ChatOptions>\n                </ChatHeader>\n\n                <ChatContent>\n                  {conversations[selectedChat].messages.map((msg) => (\n                    <MessageBubble key={msg.id} isSender={msg.isSender}>\n                      {!msg.isSender && <MessageSender>{msg.sender}</MessageSender>}\n                      <div>{msg.text}</div>\n                      <MessageTime isSender={msg.isSender}>{msg.time}</MessageTime>\n                    </MessageBubble>\n                  ))}\n                </ChatContent>\n\n                <ChatInputContainer onSubmit={handleSendMessage}>\n                  <ChatInputWrapper>\n                    <InputIconButton type=\"button\">\n                      <FaPaperclip />\n                    </InputIconButton>\n                    <ChatInput\n                      type=\"text\"\n                      placeholder=\"Type a message...\"\n                      value={message}\n                      onChange={(e) => setMessage(e.target.value)}\n                    />\n                    <InputIconButton type=\"button\">\n                      <FaSmile />\n                    </InputIconButton>\n                  </ChatInputWrapper>\n                  <SendButton \n                    type=\"submit\" \n                    disabled={!message.trim()}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                  >\n                    <FaPaperPlane />\n                  </SendButton>\n                </ChatInputContainer>\n              </>\n            ) : (\n              <EmptyStateContainer>\n                <EmptyStateIcon>\n                  <FaComments />\n                </EmptyStateIcon>\n                <EmptyStateText>Select a conversation to start chatting</EmptyStateText>\n                <EmptyStateSubText>\n                  Your messages will appear here. Start a new conversation or select an existing one to get started.\n                </EmptyStateSubText>\n              </EmptyStateContainer>\n            )}\n          </ChatContainer>\n        </MessagesLayout>\n      </PageContent>\n    </PageContainer>\n  );\n};\n\nconst PageContainer = styled(motion.div)`\n  width: 100%;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: #0c0c14;\n  color: #fff;\n  position: relative;\n  overflow: hidden;\n  z-index: 1;\n`;\n\nconst BackgroundGlow = styled.div`\n  position: absolute;\n  top: -200px;\n  right: -200px;\n  width: 600px;\n  height: 600px;\n  border-radius: 50%;\n  background: radial-gradient(circle, rgba(88, 86, 214, 0.2) 0%, rgba(88, 86, 214, 0.1) 30%, rgba(88, 86, 214, 0) 70%);\n  filter: blur(60px);\n  z-index: -1;\n  \n  &:after {\n    content: '';\n    position: absolute;\n    top: 300px;\n    left: -400px;\n    width: 400px;\n    height: 400px;\n    border-radius: 50%;\n    background: radial-gradient(circle, rgba(130, 87, 229, 0.2) 0%, rgba(130, 87, 229, 0.1) 30%, rgba(130, 87, 229, 0) 70%);\n    filter: blur(60px);\n  }\n`;\n\nconst PageContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  position: relative;\n  z-index: 2;\n`;\n\nconst MessagesHeader = styled.header`\n  padding: 40px 0 30px;\n  margin-bottom: 20px;\n  position: relative;\n  \n  &:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background: linear-gradient(\n      90deg,\n      rgba(88, 86, 214, 0) 0%,\n      rgba(88, 86, 214, 0.5) 50%,\n      rgba(88, 86, 214, 0) 100%\n    );\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  font-weight: 700;\n  margin: 0;\n  background: linear-gradient(135deg, #5856d6 0%, #a55eea 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  color: transparent;\n  text-shadow: 0 0 30px rgba(88, 86, 214, 0.3);\n  \n  @media (max-width: 768px) {\n    font-size: 2.2rem;\n  }\n`;\n\nconst MessagesLayout = styled.div`\n  display: grid;\n  grid-template-columns: 350px 1fr;\n  gap: 20px;\n  height: calc(100vh - 180px);\n  \n  @media (max-width: 1024px) {\n    grid-template-columns: 300px 1fr;\n  }\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    height: auto;\n  }\n`;\n\nconst ChatsList = styled.div`\n  background: rgba(20, 20, 30, 0.6);\n  border-radius: 16px;\n  overflow: hidden;\n  border: 1px solid rgba(255, 255, 255, 0.08);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  backdrop-filter: blur(10px);\n  \n  @media (max-width: 768px) {\n    max-height: 300px;\n  }\n`;\n\nconst SearchContainer = styled.div`\n  padding: 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n  position: relative;\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: 34px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.9rem;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 50px;\n  padding: 12px 20px 12px 40px;\n  color: #fff;\n  font-size: 0.9rem;\n  transition: all 0.3s ease;\n  \n  &:focus {\n    outline: none;\n    border-color: rgba(88, 86, 214, 0.5);\n    box-shadow: 0 0 0 4px rgba(88, 86, 214, 0.1);\n  }\n  \n  &::placeholder {\n    color: rgba(255, 255, 255, 0.4);\n  }\n`;\n\nconst ChatItem = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 15px 20px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background: ${props => props.selected ? 'rgba(88, 86, 214, 0.1)' : 'transparent'};\n  border-left: 3px solid ${props => props.selected ? '#5856d6' : 'transparent'};\n  position: relative;\n  \n  &:hover {\n    background: rgba(255, 255, 255, 0.05);\n  }\n  \n  &:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: ${props => props.selected ? '0' : '20px'};\n    width: ${props => props.selected ? '100%' : 'calc(100% - 40px)'};\n    height: 1px;\n    background: rgba(255, 255, 255, 0.05);\n  }\n`;\n\nconst ChatAvatar = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  overflow: hidden;\n  margin-right: 15px;\n  position: relative;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 50%;\n  }\n`;\n\nconst StatusIndicator = styled.span`\n  position: absolute;\n  bottom: 3px;\n  right: 3px;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: #4CAF50;\n  border: 2px solid #0c0c14;\n  box-shadow: 0 0 0 1px rgba(76, 175, 80, 0.3);\n`;\n\nconst ChatInfo = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n\nconst ChatName = styled.div`\n  font-weight: 600;\n  font-size: 0.95rem;\n  margin-bottom: 5px;\n  color: #fff;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst ChatLastMessage = styled.div`\n  font-size: 0.85rem;\n  color: rgba(255, 255, 255, 0.6);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst ChatMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  min-width: 60px;\n`;\n\nconst ChatTime = styled.div`\n  font-size: 0.75rem;\n  color: rgba(255, 255, 255, 0.4);\n  margin-bottom: 5px;\n`;\n\nconst UnreadBadge = styled.div`\n  background: linear-gradient(135deg, #5856d6 0%, #a55eea 100%);\n  color: white;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.7rem;\n  font-weight: 600;\n  box-shadow: 0 0 10px rgba(88, 86, 214, 0.5);\n`;\n\nconst ChatContainer = styled.div`\n  background: rgba(20, 20, 30, 0.6);\n  border-radius: 16px;\n  border: 1px solid rgba(255, 255, 255, 0.08);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  backdrop-filter: blur(10px);\n`;\n\nconst ChatHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n  background: rgba(30, 30, 45, 0.6);\n`;\n\nconst ChatHeaderUser = styled.div`\n  display: flex;\n  align-items: center;\n  \n  img {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    margin-right: 15px;\n    object-fit: cover;\n  }\n`;\n\nconst ChatHeaderName = styled.div`\n  font-weight: 600;\n  color: #fff;\n  font-size: 1rem;\n`;\n\nconst ChatHeaderStatus = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 0.8rem;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nconst StatusDot = styled.span`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: #4CAF50;\n  margin-right: 6px;\n`;\n\nconst ChatOptions = styled.div`\n  color: rgba(255, 255, 255, 0.6);\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    color: #fff;\n  }\n`;\n\nconst ChatContent = styled.div`\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  \n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.1);\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(88, 86, 214, 0.3);\n    border-radius: 3px;\n  }\n`;\n\nconst MessageBubble = styled.div`\n  max-width: 70%;\n  padding: 12px 16px;\n  border-radius: ${props => props.isSender \n    ? '18px 18px 4px 18px' \n    : '18px 18px 18px 4px'};\n  background: ${props => props.isSender \n    ? 'linear-gradient(135deg, rgba(88, 86, 214, 0.8) 0%, rgba(165, 94, 234, 0.8) 100%)' \n    : 'rgba(255, 255, 255, 0.05)'};\n  color: ${props => props.isSender ? '#fff' : 'rgba(255, 255, 255, 0.9)'};\n  align-self: ${props => props.isSender ? 'flex-end' : 'flex-start'};\n  position: relative;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst MessageTime = styled.div`\n  font-size: 0.7rem;\n  color: ${props => props.isSender ? 'rgba(255, 255, 255, 0.7)' : 'rgba(255, 255, 255, 0.5)'};\n  margin-top: 5px;\n  text-align: right;\n`;\n\nconst MessageSender = styled.div`\n  font-size: 0.8rem;\n  color: rgba(255, 255, 255, 0.7);\n  margin-bottom: 3px;\n`;\n\nconst ChatInputContainer = styled.form`\n  padding: 15px 20px;\n  background: rgba(30, 30, 45, 0.6);\n  border-top: 1px solid rgba(255, 255, 255, 0.05);\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nconst ChatInputWrapper = styled.div`\n  flex: 1;\n  position: relative;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 50px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  display: flex;\n  align-items: center;\n  padding: 0 10px;\n  transition: all 0.3s ease;\n  \n  &:focus-within {\n    border-color: rgba(88, 86, 214, 0.5);\n    box-shadow: 0 0 0 4px rgba(88, 86, 214, 0.1);\n  }\n`;\n\nconst ChatInput = styled.input`\n  background: transparent;\n  border: none;\n  color: #fff;\n  padding: 12px 15px;\n  font-size: 0.95rem;\n  flex: 1;\n  \n  &:focus {\n    outline: none;\n  }\n  \n  &::placeholder {\n    color: rgba(255, 255, 255, 0.4);\n  }\n`;\n\nconst InputIconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: transparent;\n  border: none;\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 1.1rem;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    color: rgba(255, 255, 255, 0.9);\n    background: rgba(255, 255, 255, 0.05);\n  }\n`;\n\nconst SendButton = styled(motion.button)`\n  background: linear-gradient(135deg, #5856d6 0%, #a55eea 100%);\n  border: none;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 3px 10px rgba(88, 86, 214, 0.3);\n  \n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 5px 15px rgba(88, 86, 214, 0.5);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst EmptyStateContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  padding: 40px;\n  text-align: center;\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nconst EmptyStateIcon = styled.div`\n  font-size: 3rem;\n  margin-bottom: 20px;\n  color: rgba(88, 86, 214, 0.3);\n`;\n\nconst EmptyStateText = styled.div`\n  font-size: 1.1rem;\n  margin-bottom: 10px;\n`;\n\nconst EmptyStateSubText = styled.div`\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.4);\n  max-width: 300px;\n  line-height: 1.5;\n`;\n\nexport default Messages; "],"names":["PageContainer","styled","motion","div","BackgroundGlow","PageContent","MessagesHeader","header","Title","h1","MessagesLayout","ChatsList","SearchContainer","SearchIcon","SearchInput","input","ChatItem","props","selected","ChatAvatar","StatusIndicator","span","ChatInfo","ChatName","ChatLastMessage","ChatMeta","ChatTime","UnreadBadge","ChatContainer","ChatHeader","ChatHeaderUser","ChatHeaderName","ChatHeaderStatus","StatusDot","ChatOptions","ChatContent","MessageBubble","isSender","MessageTime","MessageSender","ChatInputContainer","form","ChatInputWrapper","ChatInput","InputIconButton","button","SendButton","EmptyStateContainer","EmptyStateIcon","EmptyStateText","EmptyStateSubText","Messages","selectedChat","setSelectedChat","useState","message","setMessage","chats","id","name","image","lastMessage","time","unread","status","_jsxs","initial","opacity","animate","transition","duration","children","_jsx","FaSearch","type","placeholder","map","chat","index","onClick","src","alt","_Fragment","FaEllipsisH","messages","sender","text","msg","onSubmit","e","preventDefault","trim","console","log","FaPaperclip","value","onChange","target","FaSmile","disabled","whileHover","scale","whileTap","FaPaperPlane","FaComments"],"sourceRoot":""}