{"version":3,"file":"static/js/511.7a9301ce.chunk.js","mappings":"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","sources":["pages/Notifications.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { \n  FaBell, \n  FaUser, \n  FaComment, \n  FaHeart, \n  FaUsers, \n  FaBriefcase, \n  FaCheck, \n  FaTimes,\n  FaEllipsisH\n} from 'react-icons/fa';\n\nconst Notifications = () => {\n  const [filter, setFilter] = useState('all');\n  \n  const notifications = [\n    {\n      id: 1,\n      type: 'connection',\n      user: {\n        name: 'Emma Wilson',\n        image: 'https://randomuser.me/api/portraits/women/32.jpg',\n        id: 'emma'\n      },\n      content: 'accepted your connection request',\n      time: '2 hours ago',\n      read: false\n    },\n    {\n      id: 2,\n      type: 'message',\n      user: {\n        name: 'Jason Lee',\n        image: 'https://randomuser.me/api/portraits/men/45.jpg',\n        id: 'jason'\n      },\n      content: 'sent you a message',\n      time: '5 hours ago',\n      read: false\n    },\n    {\n      id: 3,\n      type: 'job',\n      user: {\n        name: 'Tesla',\n        image: 'https://logo.clearbit.com/tesla.com',\n        id: 'tesla'\n      },\n      content: 'Your job application was viewed',\n      time: 'Yesterday',\n      read: true\n    },\n    {\n      id: 4,\n      type: 'community',\n      user: {\n        name: 'UX/UI Designers Connect',\n        image: 'https://images.unsplash.com/photo-1561070791-2526d30994b5?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&q=80',\n        id: '1'\n      },\n      content: 'Your post received 25 likes',\n      time: '2 days ago',\n      read: true\n    },\n    {\n      id: 5,\n      type: 'like',\n      user: {\n        name: 'Sarah Johnson',\n        image: 'https://randomuser.me/api/portraits/women/68.jpg',\n        id: 'sarah'\n      },\n      content: 'liked your comment',\n      time: '3 days ago',\n      read: true\n    }\n  ];\n\n  const filteredNotifications = filter === 'all' \n    ? notifications \n    : notifications.filter(notification => notification.type === filter);\n\n  const getIcon = (type) => {\n    switch(type) {\n      case 'connection': return <FaUser />;\n      case 'message': return <FaComment />;\n      case 'like': return <FaHeart />;\n      case 'community': return <FaUsers />;\n      case 'job': return <FaBriefcase />;\n      default: return <FaBell />;\n    }\n  };\n\n  const getIconBackground = (type) => {\n    switch(type) {\n      case 'connection': return 'linear-gradient(135deg, #5856d6, #a55eea)';\n      case 'message': return 'linear-gradient(135deg, #36d1dc, #5b86e5)';\n      case 'like': return 'linear-gradient(135deg, #ff6b6b, #ff8e8e)';\n      case 'community': return 'linear-gradient(135deg, #4facfe, #00f2fe)';\n      case 'job': return 'linear-gradient(135deg, #43e97b, #38f9d7)';\n      default: return 'linear-gradient(135deg, #5856d6, #a55eea)';\n    }\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.05\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 10 },\n    visible: { \n      opacity: 1, \n      y: 0,\n      transition: {\n        duration: 0.4\n      }\n    }\n  };\n\n  return (\n    <PageContainer\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n    >\n      <BackgroundGlow />\n      <PageContent>\n        <NotificationsHeader>\n          <Title>Notifications</Title>\n          \n          <FilterContainer>\n            <FilterButton \n              active={filter === 'all'} \n              onClick={() => setFilter('all')}\n            >\n              All\n            </FilterButton>\n            <FilterButton \n              active={filter === 'connection'} \n              onClick={() => setFilter('connection')}\n            >\n              Connections\n            </FilterButton>\n            <FilterButton \n              active={filter === 'message'} \n              onClick={() => setFilter('message')}\n            >\n              Messages\n            </FilterButton>\n            <FilterButton \n              active={filter === 'job'} \n              onClick={() => setFilter('job')}\n            >\n              Jobs\n            </FilterButton>\n          </FilterContainer>\n        </NotificationsHeader>\n        \n        <NotificationsList\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          {filteredNotifications.map(notification => (\n            <NotificationItem \n              key={notification.id}\n              read={notification.read}\n              variants={itemVariants}\n            >\n              <NotificationIconContainer \n                background={getIconBackground(notification.type)}\n              >\n                {getIcon(notification.type)}\n              </NotificationIconContainer>\n              \n              <NotificationContent>\n                <NotificationUser to={`/profile/${notification.user.id}`}>\n                  <UserAvatar>\n                    <img src={notification.user.image} alt={notification.user.name} />\n                  </UserAvatar>\n                  <UserName>{notification.user.name}</UserName>\n                </NotificationUser>\n                \n                <NotificationText>{notification.content}</NotificationText>\n                <NotificationTime>{notification.time}</NotificationTime>\n              </NotificationContent>\n              \n              <NotificationActions>\n                {!notification.read && (\n                  <ActionButton>\n                    <FaCheck />\n                  </ActionButton>\n                )}\n                <ActionButton>\n                  <FaEllipsisH />\n                </ActionButton>\n              </NotificationActions>\n            </NotificationItem>\n          ))}\n        </NotificationsList>\n        \n        {filteredNotifications.length === 0 && (\n          <EmptyState>\n            <EmptyStateIcon>\n              <FaBell />\n            </EmptyStateIcon>\n            <EmptyStateText>No notifications to display</EmptyStateText>\n            <EmptyStateDescription>\n              When you have new notifications, they will appear here.\n            </EmptyStateDescription>\n          </EmptyState>\n        )}\n      </PageContent>\n    </PageContainer>\n  );\n};\n\nconst PageContainer = styled(motion.div)`\n  width: 100%;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: #0c0c14;\n  color: #fff;\n  position: relative;\n  overflow: hidden;\n  z-index: 1;\n`;\n\nconst BackgroundGlow = styled.div`\n  position: absolute;\n  top: -200px;\n  right: -200px;\n  width: 600px;\n  height: 600px;\n  border-radius: 50%;\n  background: radial-gradient(circle, rgba(88, 86, 214, 0.2) 0%, rgba(88, 86, 214, 0.1) 30%, rgba(88, 86, 214, 0) 70%);\n  filter: blur(50px);\n  z-index: -1;\n  \n  &:after {\n    content: '';\n    position: absolute;\n    top: 300px;\n    left: -400px;\n    width: 400px;\n    height: 400px;\n    border-radius: 50%;\n    background: radial-gradient(circle, rgba(130, 87, 229, 0.2) 0%, rgba(130, 87, 229, 0.1) 30%, rgba(130, 87, 229, 0) 70%);\n    filter: blur(50px);\n  }\n`;\n\nconst PageContent = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  position: relative;\n  z-index: 2;\n`;\n\nconst NotificationsHeader = styled.header`\n  padding: 40px 0 30px;\n  margin-bottom: 20px;\n  position: relative;\n  \n  &:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background: linear-gradient(\n      90deg,\n      rgba(88, 86, 214, 0) 0%,\n      rgba(88, 86, 214, 0.5) 50%,\n      rgba(88, 86, 214, 0) 100%\n    );\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  font-weight: 700;\n  margin: 0 0 20px;\n  background: linear-gradient(135deg, #5856d6 0%, #a55eea 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  color: transparent;\n  text-shadow: 0 0 30px rgba(88, 86, 214, 0.3);\n  \n  @media (max-width: 768px) {\n    font-size: 2.2rem;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-top: 20px;\n`;\n\nconst FilterButton = styled.button`\n  padding: 8px 16px;\n  background: ${props => props.active ? 'rgba(88, 86, 214, 0.2)' : 'rgba(255, 255, 255, 0.05)'};\n  border: 1px solid ${props => props.active ? 'rgba(88, 86, 214, 0.3)' : 'rgba(255, 255, 255, 0.1)'};\n  border-radius: 20px;\n  color: ${props => props.active ? '#fff' : 'rgba(255, 255, 255, 0.7)'};\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: ${props => props.active ? 'rgba(88, 86, 214, 0.25)' : 'rgba(255, 255, 255, 0.08)'};\n    transform: translateY(-2px);\n  }\n`;\n\nconst NotificationsList = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nconst NotificationItem = styled(motion.div)`\n  display: flex;\n  align-items: flex-start;\n  padding: 20px;\n  background: ${props => props.read ? 'rgba(20, 20, 30, 0.5)' : 'rgba(88, 86, 214, 0.05)'};\n  border: 1px solid ${props => props.read ? 'rgba(255, 255, 255, 0.05)' : 'rgba(88, 86, 214, 0.1)'};\n  border-radius: 16px;\n  transition: all 0.3s ease;\n  backdrop-filter: blur(10px);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n    border-color: ${props => props.read ? 'rgba(255, 255, 255, 0.1)' : 'rgba(88, 86, 214, 0.2)'};\n  }\n`;\n\nconst NotificationIconContainer = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 15px;\n  background: ${props => props.background};\n  color: #fff;\n  flex-shrink: 0;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n`;\n\nconst NotificationContent = styled.div`\n  flex: 1;\n`;\n\nconst NotificationUser = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  margin-bottom: 5px;\n`;\n\nconst UserAvatar = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  overflow: hidden;\n  margin-right: 10px;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst UserName = styled.span`\n  font-weight: 600;\n  color: #fff;\n  font-size: 0.95rem;\n`;\n\nconst NotificationText = styled.p`\n  color: rgba(255, 255, 255, 0.7);\n  margin: 0;\n  font-size: 0.9rem;\n`;\n\nconst NotificationTime = styled.span`\n  font-size: 0.8rem;\n  color: rgba(255, 255, 255, 0.5);\n  display: block;\n  margin-top: 5px;\n`;\n\nconst NotificationActions = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: 15px;\n`;\n\nconst ActionButton = styled.button`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.05);\n  color: rgba(255, 255, 255, 0.7);\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-size: 0.8rem;\n  \n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    color: #fff;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  background: rgba(20, 20, 30, 0.5);\n  border-radius: 16px;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n  backdrop-filter: blur(10px);\n`;\n\nconst EmptyStateIcon = styled.div`\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: rgba(88, 86, 214, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto 20px;\n  color: rgba(88, 86, 214, 0.7);\n  font-size: 1.5rem;\n`;\n\nconst EmptyStateText = styled.h3`\n  font-size: 1.2rem;\n  color: #fff;\n  margin: 0 0 10px;\n`;\n\nconst EmptyStateDescription = styled.p`\n  color: rgba(255, 255, 255, 0.6);\n  font-size: 0.9rem;\n  max-width: 300px;\n  margin: 0 auto;\n`;\n\nexport default Notifications; "],"names":["PageContainer","styled","motion","div","BackgroundGlow","PageContent","NotificationsHeader","header","Title","h1","FilterContainer","FilterButton","button","props","active","NotificationsList","NotificationItem","read","NotificationIconContainer","background","NotificationContent","NotificationUser","Link","UserAvatar","UserName","span","NotificationText","p","NotificationTime","NotificationActions","ActionButton","EmptyState","EmptyStateIcon","EmptyStateText","h3","EmptyStateDescription","Notifications","filter","setFilter","useState","notifications","id","type","user","name","image","content","time","filteredNotifications","notification","getIcon","_jsx","FaUser","FaComment","FaHeart","FaUsers","FaBriefcase","FaBell","getIconBackground","itemVariants","hidden","opacity","y","visible","transition","duration","_jsxs","initial","animate","children","onClick","variants","staggerChildren","map","to","src","alt","FaCheck","FaEllipsisH","length"],"sourceRoot":""}